{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/NickVTom/Statisticsforpython/blob/main/Lektion%202%3A%20Vectors%20and%20Matrices\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "deVRlqtRgcUa"
      },
      "source": [
        "# Vektorer\n",
        "\n",
        "Sidste gang så vi, hvordan man bruger en **augmented matrix** og rækkeoperationer, der bevarer forholdene i et system til at løse et system med lineære funktioner.\n",
        "\n",
        "En matrix er i sidste ende en måde at repræsentere en tabel med tal. Alle matricer, vi arbejdede med sidste gang, havde 2 rækker og 3 kolonner. Her er den første, der opsætter vores lineære system\n",
        "\n",
        "$$\n",
        "\\left[\n",
        "  \\begin{matrix}\n",
        "    150 & -1 \\\\\n",
        "    200 & -1 \\\\\n",
        "  \\end{matrix}\n",
        "  \\left|\n",
        "    \\,\n",
        "    \\begin{matrix}\n",
        "      -1000  \\\\\n",
        "      -500  \\\\\n",
        "    \\end{matrix}\n",
        "  \\right.\n",
        "\\right]\n",
        "$$\n",
        "\n",
        "Det er en $2x3$ matrix og per konvention er det først rækker og så kolonner som vi tæller - det afspejler sig også i den måde vi tilgå en matrix via NumPy eller tabeller i Pandas.\n",
        "\n",
        "\n",
        "Hver af vore rækker og kolonner i denne matrix er repræsenteret som en **liste** af tal. En liste med tal er kendt som en **vektor**. En række fra en matrix er kendt som en rækkevektor, mens en søjle er kendt som en søjlevektor. Her er rækkevektorerne:\n",
        "\n",
        "\n",
        "  \\begin{bmatrix}\n",
        "    150 & -1 & -1000\\\\\n",
        "  \\end{bmatrix}\n",
        "\n",
        "\\\\\n",
        "\n",
        "  \\begin{bmatrix}\n",
        "    200 & -1 & -500\\\\\n",
        "  \\end{bmatrix}\n",
        "\n",
        "Og her er vores søjlevektor:\n",
        "\n",
        "\\begin{bmatrix}\n",
        "150\\\\\n",
        "200\\\\\n",
        "\\end{bmatrix}\n",
        "\n",
        "\\begin{bmatrix}\n",
        "-1\\\\\n",
        "-1\\\\\n",
        "\\end{bmatrix}\n",
        "\n",
        "\\begin{bmatrix}\n",
        "-1000\\\\\n",
        "-500\\\\\n",
        "\\end{bmatrix}\n",
        "\n",
        "I dette afsnit lærer vi mere om søjlevektor og hvad man kan \"gøre med dem\" hvilket burde hjælpe os med at forstå visse egenskaber af lineære systemer.\n",
        "\n",
        "Vi afslutter med at underbygge den tilgang, vi brugte i sidste gang for at løse det lineære system ved at kombinere nøgleideer omkring matricer og vektorer.\n",
        "\n",
        "Vi starter med at opbygge en geometrisk intuition af vektorer. Generelt henviser ordet vektor til søjlevektoren (som en ordnet liste over elementer i en enkelt kolonne), og vi vil henvise til søjlevektoren på den måde gennem resten af ​​dette kursus."
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "3nIy4-WVkILS"
      },
      "source": [
        "\n",
        "Når en vektor indeholder 2 eller 3 elementer, kan vi nemt visualisere den i et 2D eller 2D koordinatsysem.\n",
        "\n",
        "Typisk visualiseres en vektor i et koordinatsystem ved hjælp af pile og ikke med koordinater (punkter). For en vektor, der indeholder to elementer, beskriver den første værdi $x$ mens den anden beskriver $y$. Vektorer tegnes normalt fra begyndelsespunktet eller origo $(0,0)$ til det punkt, der er beskrevet af vektoren:\n",
        "\n",
        "\\begin{bmatrix}\n",
        "3\\\\\n",
        "4\\\\\n",
        "\\end{bmatrix}\n",
        "\n",
        "\\begin{bmatrix}\n",
        "-1\\\\\n",
        "-1\\\\\n",
        "\\end{bmatrix}\n",
        "\n",
        "\\begin{bmatrix}\n",
        "-4\\\\\n",
        "7\\\\\n",
        "\\end{bmatrix}"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "baphO34glD4B"
      },
      "source": [
        "# pakker\n",
        "import matplotlib.pyplot as plt\n",
        "import numpy as np"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 453
        },
        "id": "4Dm4ZsE-eeMX",
        "outputId": "44b78b66-a9a3-49cc-cf51-cf1d1da6ed1c"
      },
      "source": [
        "# koordinatsysem\n",
        "\n",
        "plt.axhline(0, c='black', lw=0.5)\n",
        "plt.axvline(0, c='black', lw=0.5)\n",
        "plt.xlim(-5,7)\n",
        "plt.ylim(-4,8)\n",
        "\n",
        "# vektorer\n",
        "\n",
        "plt.quiver(0, 0, 3, 4, angles='xy', scale_units='xy', scale=1, color='blue')\n",
        "plt.quiver(0, 0, -1, -1, angles='xy', scale_units='xy', scale=1, color='red')\n",
        "plt.quiver(0, 0, -4, 7, angles='xy', scale_units='xy', scale=1, color='gold')"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.quiver.Quiver at 0x7aa329301540>"
            ]
          },
          "metadata": {},
          "execution_count": 43
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "W0ZA-4pumAWq"
      },
      "source": [
        "Pile bruges til at visualisere individuelle vektorer, fordi de understreger de to nøgleegenskaber for en vektor - **retning** og **længde**.\n",
        "Retningen af ​​en vektor beskriver hvilken vej den peger og længden burde være selv-forklarende.\n",
        "\n",
        "I de følgende visualiseringer finder du eksempler på 2 vektorer med samme retning, men forskellig størrelse og 2 eksempler på vektorer med samme størrelse, men forskellige retninger."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 448
        },
        "id": "fMm-3Y-DlB-i",
        "outputId": "0e14cc2a-f9c2-4f89-805a-c837dbbcee1c"
      },
      "source": [
        "plt.axhline(0, c='black', lw=0.5)\n",
        "plt.axvline(0, c='black', lw=0.5)\n",
        "plt.xlim(-5,5)\n",
        "plt.ylim(-5,5)\n",
        "\n",
        "plt.quiver(0, 0, 3, 3, angles='xy', scale_units='xy', scale=1, color='blue')"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.quiver.Quiver at 0x7aa32936ed70>"
            ]
          },
          "metadata": {},
          "execution_count": 44
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 448
        },
        "id": "tpRdVLBfnAbo",
        "outputId": "7cb58544-ea3b-4c57-b0f0-02f2eda6c918"
      },
      "source": [
        "plt.axhline(0, c='black', lw=0.5)\n",
        "plt.axvline(0, c='black', lw=0.5)\n",
        "plt.xlim(-5,5)\n",
        "plt.ylim(-5,5)\n",
        "\n",
        "plt.quiver(0, 0, 2, 2, angles='xy', scale_units='xy', scale=1, color='red')"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.quiver.Quiver at 0x7aa344960be0>"
            ]
          },
          "metadata": {},
          "execution_count": 8
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 448
        },
        "id": "8wnADIFAnSKg",
        "outputId": "bfdbc811-49a9-41ae-bf46-54dec8b0b99f"
      },
      "source": [
        "plt.axhline(0, c='black', lw=0.5)\n",
        "plt.axvline(0, c='black', lw=0.5)\n",
        "plt.xlim(-5,5)\n",
        "plt.ylim(-5,5)\n",
        "\n",
        "plt.quiver(0, 0, 2, 2, angles='xy', scale_units='xy', scale=1, color='blue')"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.quiver.Quiver at 0x7aa344820910>"
            ]
          },
          "metadata": {},
          "execution_count": 9
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 448
        },
        "id": "RX97BsHQnVTc",
        "outputId": "b44e3fcb-70bc-42dc-c393-79ea3225e6c7"
      },
      "source": [
        "plt.axhline(0, c='black', lw=0.5)\n",
        "plt.axvline(0, c='black', lw=0.5)\n",
        "plt.xlim(-5,5)\n",
        "plt.ylim(-5,5)\n",
        "\n",
        "plt.quiver(0, 0, -2, -2, angles='xy', scale_units='xy', scale=1, color='red')"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.quiver.Quiver at 0x7aa3448946d0>"
            ]
          },
          "metadata": {},
          "execution_count": 10
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "PkAKr3TpnycS"
      },
      "source": [
        "Som du kan se i koden, kan vi visualisere vektorer med `plt.quiver()`\n",
        "Her bruger vi for nu altid `angles='xy', scale_units='xy', scale=1` som parameter her,\n",
        "Vi kan bruge `color='red'` til at sætte en farve..."
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "W2kUdrmaoMVh"
      },
      "source": [
        "Øvelse: Prøv at visualisere - husk at tilpasse koordinatsystemet\n",
        "\n",
        "\\begin{bmatrix}\n",
        "6\\\\\n",
        "2\\\\\n",
        "\\end{bmatrix}\n",
        "\n",
        "\\begin{bmatrix}\n",
        "-3\\\\\n",
        "-1\\\\\n",
        "\\end{bmatrix}\n",
        "\n",
        "\\begin{bmatrix}\n",
        "-4\\\\\n",
        "10\\\\\n",
        "\\end{bmatrix}"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 448
        },
        "id": "-tBYHs5UmSYB",
        "outputId": "0fbdc810-e42d-46a4-a0d8-ad21b05077ee"
      },
      "source": [
        "plt.axhline(0, c='black', lw=0.5)\n",
        "plt.axvline(0, c='black', lw=0.5)\n",
        "plt.xlim(-5,8)\n",
        "plt.ylim(-5,11)\n",
        "\n",
        "plt.quiver(0, 0, 6, 2, angles='xy', scale_units='xy', scale=1, color='red')\n",
        "plt.quiver(0, 0, -3, -1, angles='xy', scale_units='xy', scale=1, color='blue')\n",
        "plt.quiver(0, 0, -4, 10, angles='xy', scale_units='xy', scale=1, color='green')"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.quiver.Quiver at 0x7aa344700d00>"
            ]
          },
          "metadata": {},
          "execution_count": 11
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "4e3MAHcQo1Qy"
      },
      "source": [
        "**addition**\n",
        "\n",
        "Ligesom rækker i en matrix kan vektorer lægges sammen og trækkes fra. Når vi adderer (tilføjer) eller substraherer (fratrækker) vektorer, tilføjes eller trækkes elementer i samme position, og der dannes en ny vektor. Her er et eksempel på, hvor to vektorer adderes:\n",
        "\n",
        "$$\n",
        "\\begin{bmatrix}\n",
        "5\\\\\n",
        "1\n",
        "\\end{bmatrix} + \\begin{bmatrix}\n",
        "1\\\\\n",
        "3\n",
        "\\end{bmatrix} =\n",
        "\\begin{bmatrix}\n",
        "6\\\\\n",
        "4\n",
        "\\end{bmatrix}\n",
        "$$\n",
        "\n",
        "\n",
        "\\\\\n",
        "For at visualisere vektoraddition er skal man \"forbinde\" vektorerne  i stedet for at visualisere alle vektorerne fra $(0,0)$."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 453
        },
        "id": "jvpD4L54np2S",
        "outputId": "2efd552f-0031-4754-de2d-1587e82e20b6"
      },
      "source": [
        "plt.xlim(0,7)\n",
        "plt.ylim(0,5)\n",
        "\n",
        "plt.quiver(0, 0, 5, 1, angles='xy', scale_units='xy', scale=1, color='blue')\n",
        "plt.quiver(5, 1, 1, 3, angles='xy', scale_units='xy', scale=1, color='blue')"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.quiver.Quiver at 0x7aa3293b0820>"
            ]
          },
          "metadata": {},
          "execution_count": 45
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "3Omp_mxJtfgN"
      },
      "source": [
        "som man kan se, starter vektor 1 i $(0,0)$ mens vektor to starter i $(5,1)$ hvor vektor 1 ender."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 453
        },
        "id": "bHyMIfWGspP3",
        "outputId": "c5a48c23-9f20-4010-8aaa-e2e195fcc57e"
      },
      "source": [
        "plt.xlim(0,7)\n",
        "plt.ylim(0,5)\n",
        "\n",
        "plt.quiver(0, 0, 5, 1, angles='xy', scale_units='xy', scale=1, color='blue')\n",
        "plt.quiver(5, 1, 1, 3, angles='xy', scale_units='xy', scale=1, color='blue')\n",
        "plt.quiver(0, 0, 6, 4, angles='xy', scale_units='xy', scale=1, color='red')"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.quiver.Quiver at 0x7aa32922a530>"
            ]
          },
          "metadata": {},
          "execution_count": 46
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "iUz6-B9LuA5J"
      },
      "source": [
        "Det samme (bare omvendt) med at **subtrahere** vektorer:\n",
        "\n",
        "\n",
        "$$\n",
        "\\begin{bmatrix}\n",
        "5\\\\\n",
        "1\n",
        "\\end{bmatrix} - \\begin{bmatrix}\n",
        "1\\\\\n",
        "3\n",
        "\\end{bmatrix} =\n",
        "\\begin{bmatrix}\n",
        "4\\\\\n",
        "-2\n",
        "\\end{bmatrix}\n",
        "$$"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 453
        },
        "id": "fgcesF41tUS9",
        "outputId": "5143ab64-6e6b-4ae7-e95e-0c9218190bd4"
      },
      "source": [
        "plt.axhline(0, c='black', lw=0.5)\n",
        "plt.axvline(0, c='black', lw=0.5)\n",
        "plt.xlim(-3,7)\n",
        "plt.ylim(-3,3)\n",
        "\n",
        "plt.quiver(0, 0, 5, 1, angles='xy', scale_units='xy', scale=1, color='blue')\n",
        "plt.quiver(5, 1, -1, -3, angles='xy', scale_units='xy', scale=1, color='blue')\n",
        "plt.quiver(0, 0, 4, -2, angles='xy', scale_units='xy', scale=1, color='red')\n"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.quiver.Quiver at 0x7aa3292f00a0>"
            ]
          },
          "metadata": {},
          "execution_count": 47
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "jLOsprHSuq8g"
      },
      "source": [
        "Øvelse: Visualiser\n",
        "\n",
        "$$\n",
        "\\begin{bmatrix}\n",
        "5\\\\\n",
        "2\n",
        "\\end{bmatrix} + \\begin{bmatrix}\n",
        "2\\\\\n",
        "3\n",
        "\\end{bmatrix} =\n",
        "\\begin{bmatrix}\n",
        "7\\\\\n",
        "5\n",
        "\\end{bmatrix}\n",
        "$$"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 448
        },
        "id": "CrCmwt5QoTY_",
        "outputId": "87523f5d-60fa-4fd9-da9d-e6ad56451156"
      },
      "source": [
        "plt.axhline(0, c='black', lw=0.5)\n",
        "plt.axvline(0, c='black', lw=0.5)\n",
        "plt.xlim(-3,8)\n",
        "plt.ylim(-3,7)\n",
        "\n",
        "plt.quiver(0, 0, 5, 2, angles='xy', scale_units='xy', scale=1, color='blue')\n",
        "plt.quiver(5, 2, 2, 3, angles='xy', scale_units='xy', scale=1, color='blue')\n",
        "plt.quiver(0, 0, 7, 5, angles='xy', scale_units='xy', scale=1, color='red')\n"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.quiver.Quiver at 0x7aa3294dbfd0>"
            ]
          },
          "metadata": {},
          "execution_count": 48
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "xuUQsYZNvGDf"
      },
      "source": [
        "**At gange vektorer**\n",
        "\n",
        "Vi kan også skalere vektorer ved at gange eller dividere med en skalar (et reelt tal). Når vi gør det, multipliceres eller deles hvert element i vektoren med skalaren:\n",
        "\n",
        "$$\n",
        "4* \\begin{bmatrix}\n",
        "5\\\\\n",
        "2\n",
        "\\end{bmatrix} =\n",
        "\\begin{bmatrix}\n",
        "20\\\\\n",
        "8\n",
        "\\end{bmatrix}\n",
        "$$\n",
        "\n",
        "\n",
        "Kombinationen af disse regneregler gør det muligt at kombinere vektorer for at opnå nye. Det er en af centrale ideer i lineær algebra:\n",
        "\n",
        "$$\n",
        "4* \\begin{bmatrix}\n",
        "5\\\\\n",
        "2\n",
        "\\end{bmatrix} -\n",
        "\\begin{bmatrix}\n",
        "6\\\\\n",
        "3\n",
        "\\end{bmatrix}=\n",
        "\\begin{bmatrix}\n",
        "14\\\\\n",
        "5\n",
        "\\end{bmatrix}\n",
        "$$"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "b_3YCMbWuXc7",
        "outputId": "8b45e484-9f03-4eb0-80c4-9e9802345738"
      },
      "source": [
        "# eller med numpy (quick and dirty)\n",
        "4*np.array([5,2])-np.array([6,5])"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([14,  3])"
            ]
          },
          "metadata": {},
          "execution_count": 49
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "kiAQj1jLxsX5"
      },
      "source": [
        "#### om `shape`\n",
        "\n",
        "Shape funktionen viser os hvor mange rækker/kolonner der er i en matrix. Hvis vi arbejder med en rækkevektor, så er shape $(1,n)$; ved en søjlevektor er det $(n,1)$.\n",
        "At beskrive en søjlevektor i Python er ikke smart fordi man skal skrive  `[[1], [2],[3]]` man kan så bruge `reshape(-1,1)` til at omforme en række til en søjlevektor.\n"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "GSAHosAbxIXn"
      },
      "source": [
        "#def vektor 1 og lav om til søjle\n",
        "v1 = np.array([2,1,2], dtype=np.float32)\n",
        "v1 = v1.reshape(-1,1)\n",
        "\n",
        "#def vektor 2 og lav om til søjle\n",
        "v2 = np.array([3,3,1], dtype=np.float32)\n",
        "v2 = v2.reshape(-1,1)\n",
        "\n",
        "v_result = v1*4 - v2*2"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "brTT37RAydlL",
        "outputId": "48419c28-ea3c-4321-9108-45581b8b8c1c"
      },
      "source": [
        "v_result"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[ 2.],\n",
              "       [-2.],\n",
              "       [ 6.]], dtype=float32)"
            ]
          },
          "metadata": {},
          "execution_count": 51
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "v_result.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "49naUOTADl8-",
        "outputId": "06754c80-69bf-4f27-e5e1-5bbc73a7534c"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(3, 1)"
            ]
          },
          "metadata": {},
          "execution_count": 52
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "32P8Yvc5t1IP"
      },
      "source": [
        "dir(v_result)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Uden transformation"
      ],
      "metadata": {
        "id": "zANKzcBpDgg8"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "v11 = np.array([2,1,2], dtype=np.float32)"
      ],
      "metadata": {
        "id": "6hF0IqhB9xoZ"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "v22 = np.array([3,3,1], dtype=np.float32)"
      ],
      "metadata": {
        "id": "jeOA6zpY-YDs"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "v_result2 = v11*4 - v22*2"
      ],
      "metadata": {
        "id": "l5CCGoYZ-efc"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "v_result2"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "l724J_Pa-8gu",
        "outputId": "e36caa67-cdda-465c-e25c-381b191ce5eb"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([ 2., -2.,  6.], dtype=float32)"
            ]
          },
          "metadata": {},
          "execution_count": 57
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "hngz2Qr2ttfk",
        "outputId": "b4379eff-be3b-4cf1-ce64-113ee4360060"
      },
      "source": [
        "v_result2.shape"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(3,)"
            ]
          },
          "metadata": {},
          "execution_count": 20
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Hvorfor reshape can være vigtigt"
      ],
      "metadata": {
        "id": "5CWwSVB0DxcK"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "v_result3 = v11*4 - v2*2"
      ],
      "metadata": {
        "id": "zvsJmHCzD1oW"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "v_result3"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "r6WomofdECqs",
        "outputId": "7d5e4349-8a9c-4095-a552-22c2b42ce195"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[ 2., -2.,  2.],\n",
              "       [ 2., -2.,  2.],\n",
              "       [ 6.,  2.,  6.]], dtype=float32)"
            ]
          },
          "metadata": {},
          "execution_count": 59
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "v_result3.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Fv06tiSDEH4q",
        "outputId": "41f643e3-33ed-47de-bafa-9a6b245120f9"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(3, 3)"
            ]
          },
          "metadata": {},
          "execution_count": 29
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "nH5CKSZF0Ozz"
      },
      "source": [
        "Den sidste vigtige vektoroperation er prikproduktet/skalarproduktet.\n",
        "Det er ikke mulight at multipicere vektorer direkte.\n",
        "Prikprodukt ligner multiplikation, men elementerne i vektorerne multipliceres på en bestemt måde.\n",
        "Begge disse vektorer skal indeholde det samme antal elementer, hvilket er et krav, som de andre operationer, vi hidtil har lært, også har.\n",
        "For at beregne prikproduktet skal vi sammenfatte produkterne med de 2 værdier i hver position i hver vektor:\n",
        "\n",
        "$$\\vec{a} * \\vec{b} = \\sum_{i=1}^{n} a_i b_i = a_1b_1 + a_2b_2 + ... + a_nb_n$$\n",
        "\n",
        "$$\n",
        "\\begin{bmatrix}\n",
        "2\\\\\n",
        "1\\\\\n",
        "2\n",
        "\\end{bmatrix} *\n",
        "\\begin{bmatrix}\n",
        "3\\\\\n",
        "3\\\\\n",
        "1\n",
        "\\end{bmatrix}= (2·3)+(1·3)+(2·1) = 11\n",
        "$$"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "PyJUpbeEITQW",
        "outputId": "8f2ce2b8-601c-488c-e8f7-24c60d41d157"
      },
      "source": [
        "# forkert\n",
        "np.array([2,1,2]) * np.array([3,3,1])"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([6, 3, 2])"
            ]
          },
          "metadata": {},
          "execution_count": 60
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "4WrAOVYVICWR",
        "outputId": "830d8c29-534c-4d10-b826-3478f5e3ad75"
      },
      "source": [
        "# rigtigt\n",
        "np.array([2,1,2]).dot(np.array([3,3,1]))"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "11"
            ]
          },
          "metadata": {},
          "execution_count": 61
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Q5vDuTiYvMaK",
        "outputId": "1e2ca877-5972-439c-ac7b-62240e7b91d9"
      },
      "source": [
        "# Også rigtigt\n",
        "np.array([2,1,2]) @ np.array([3,3,1])"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "11"
            ]
          },
          "metadata": {},
          "execution_count": 62
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "I97yjA3VIuVO",
        "outputId": "f28a3281-ed64-4d54-dfb9-c896d72fa8ae"
      },
      "source": [
        "# eller:\n",
        "\n",
        "a = np.array([2,1,2]).reshape(-1,1)\n",
        "b = np.array([3,3,1]).reshape(-1,1)\n",
        "\n",
        "a[:,0]@b"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([11])"
            ]
          },
          "metadata": {},
          "execution_count": 63
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "7RBHB_JyI-Dp",
        "outputId": "4f455f55-d5f9-4798-c031-4f411f1e2727"
      },
      "source": [
        "# eller\n",
        "\n",
        "np.dot(a[:,0],b)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([11])"
            ]
          },
          "metadata": {},
          "execution_count": 40
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "a"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "mjEcIo6Mw0y6",
        "outputId": "9753db88-61c3-46c4-ec6e-880e003a4eac"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[2],\n",
              "       [1],\n",
              "       [2]])"
            ]
          },
          "metadata": {},
          "execution_count": 71
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 37
        },
        "id": "cFJBHU3aLeUB",
        "outputId": "87dc0fcb-c171-4f1b-c374-7ccc5253b6bf"
      },
      "source": [
        "# eller\n",
        "from sympy import * #importer alt fra Sympy\n",
        "from sympy.matrices import Matrix #importer matrix\n",
        "\n",
        "M = Matrix([2,1,2])\n",
        "N = Matrix([3,3,1])\n",
        "\n",
        "M.dot(N)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "11"
            ],
            "text/latex": "$\\displaystyle 11$"
          },
          "metadata": {},
          "execution_count": 41
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "esj-3VeeJfil"
      },
      "source": [
        "I modsætning til de andre vektoroperationer er resultatet her en skalær værdi, ikke en vektor. Selvom vi ikke udnytter prikproduktet med det samme, vil det være centralt i næste session, når vi lærer, hvordan vi multiplicerer en matrix og en vektor sammen."
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "VGAdAzHGL8Hg"
      },
      "source": [
        "Vi har indtil videre set, at vi kan multiplicere vektorer med en skalær værdi og kombinere vektorer ved hjælp af +/-.\n",
        "\n",
        "Ved hjælp af disse operationer kan vi bestemme, om en bestemt vektor kan findes ved at kombinere andre vektorer. For eksempel vil vi måske vide, om vi kan kombinere vektorerne $\\begin{bmatrix} 2\\\\ 3 \\end{bmatrix}$ og $\\begin{bmatrix} 3\\\\ 1 \\end{bmatrix}$ til opnå $\\begin{bmatrix} 1\\\\ 5 \\end{bmatrix}$\n",
        "\n",
        "Vi kan skrive vores problem som:\n",
        "\n",
        "$$c_1 \\begin{bmatrix} 2\\\\ 3 \\end{bmatrix} + c_2 \\begin{bmatrix} 3\\\\ 1 \\end{bmatrix}  = \\begin{bmatrix} 1\\\\ 5 \\end{bmatrix}$$\n",
        "\n",
        "$c_1$ og $c_2$ er variable, som skalerer vores vektorer og vi vil gerne finde en løsning, hvor vores ligning går op.\n",
        "\n",
        "Det at kunne skalere vektorer ved hjælp af skalær multiplikation og derefter tilføje eller trække disse skalerede vektorer er kendt som **lineær kombination**.\n",
        "\n",
        "Konceptet er afgørende for at kunne anvende lineær algebra til at løse nyttige problemer. Ved hjælp af begrebet lineær kombination kan vi omformulere vores problem til det følgende:\n",
        "\n",
        "er $\\begin{bmatrix} 1\\\\ 5 \\end{bmatrix}$ en lineær kombination af $\\begin{bmatrix} 3\\\\ 1 \\end{bmatrix}$ og $\\begin{bmatrix} 2\\\\ 3 \\end{bmatrix}$?"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 453
        },
        "id": "OoTCXiMnP8_M",
        "outputId": "a34e4826-5325-4290-829e-f174e9af0f77"
      },
      "source": [
        "plt.axhline(0, c='black', lw=0.5)\n",
        "plt.axvline(0, c='black', lw=0.5)\n",
        "plt.xlim(-2,6)\n",
        "plt.ylim(-2,7)\n",
        "\n",
        "plt.quiver(0, 0, 1, 5, angles='xy', scale_units='xy', scale=1, color='red')\n",
        "plt.quiver(0, 0, 2, 3, angles='xy', scale_units='xy', scale=1, color='blue')\n",
        "plt.quiver(0, 0, 3, 1, angles='xy', scale_units='xy', scale=1, color='green')\n"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.quiver.Quiver at 0x7aa3285db250>"
            ]
          },
          "metadata": {},
          "execution_count": 72
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 453
        },
        "id": "iNEZ0clSPPQU",
        "outputId": "c91f0ee0-cd7f-4416-f114-95ad66bab2f7"
      },
      "source": [
        "plt.axhline(0, c='black', lw=0.5)\n",
        "plt.axvline(0, c='black', lw=0.5)\n",
        "plt.xlim(-2,6)\n",
        "plt.ylim(-2,7)\n",
        "\n",
        "plt.quiver(0, 0, 4, 6, angles='xy', scale_units='xy', scale=1, color='blue')\n",
        "plt.quiver(4, 6, -3, -1, angles='xy', scale_units='xy', scale=1, color='green')\n",
        "plt.quiver(0, 0, 1, 5, angles='xy', scale_units='xy', scale=1, color='red')\n",
        "\n",
        "plt.quiver(0, 0, 2, 3, angles='xy', scale_units='xy', scale=1, color='gold')\n",
        "plt.quiver(0, 0, 3, 1, angles='xy', scale_units='xy', scale=1, color='gold')\n"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.quiver.Quiver at 0x7aa3286ce740>"
            ]
          },
          "metadata": {},
          "execution_count": 73
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "IHV5Wd2DxxR8"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "DdfFy_wGQy3J"
      },
      "source": [
        "$c_1 = 2$; $c_2 = -1$"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "gzwtvlxsRHnW"
      },
      "source": [
        "Sidste gang talte så vi på lønoptimering og endte med at skrive de 2 ligninger, som representerer jobtilbud i matrix-form:\n",
        "\n",
        "**augmented matrix**\n",
        "\n",
        "$$\n",
        "\\left[\n",
        "  \\begin{matrix}\n",
        "    150 & -1 \\\\\n",
        "    200 & -1 \\\\\n",
        "  \\end{matrix}\n",
        "  \\left|\n",
        "    \\,\n",
        "    \\begin{matrix}\n",
        "      -1000  \\\\\n",
        "      -500  \\\\\n",
        "    \\end{matrix}\n",
        "  \\right.\n",
        "\\right]\n",
        "$$\n",
        "\n",
        "**nu kan vi prøve at forbinde denne matrix til ideen om lineær kombination, som vi lige har set**\n",
        "\n",
        "Vi vil så gerne vide, om $\\begin{bmatrix} -1000\\\\ -500 \\end{bmatrix}$ er en liniær kombination af $\\begin{bmatrix} 150\\\\ 200 \\end{bmatrix}$ og $\\begin{bmatrix} -1\\\\ -1 \\end{bmatrix}$\n",
        "\n",
        "for at finde løsningen, skal vi så finde værdier til $x$ og $y$ hvor følgende gælder:\n",
        "\n",
        "$$x \\begin{bmatrix} 150\\\\ 200 \\end{bmatrix} + y \\begin{bmatrix} -1\\\\ -1 \\end{bmatrix} = \\begin{bmatrix} -1000\\\\ -500 \\end{bmatrix}$$\n",
        "\n",
        "Sidste gang fandt vi en løsning ved at bruge rækkeoperationer indtil vi kom frem til:\n",
        "\n",
        "$$\\left[\\begin{array}{rr|r}\n",
        "1 & 0 & x = 10\\\\\n",
        "0 & 1 & y = 2500\n",
        "\\end{array}\\right]$$"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "pL-8UQCGTCI6"
      },
      "source": [
        "Det sidste koncept, vi kort introducerer her, er matrixligningen. Matrixligningen er repræsentationen af ​​et lineært system, der kun bruger matricer og vektorer. Her er den augmented matrix, vi startede med:\n",
        "\n",
        "$$\n",
        "\\left[\n",
        "  \\begin{matrix}\n",
        "    150 & -1 \\\\\n",
        "    200 & -1 \\\\\n",
        "  \\end{matrix}\n",
        "  \\left|\n",
        "    \\,\n",
        "    \\begin{matrix}\n",
        "      -1000  \\\\\n",
        "      -500  \\\\\n",
        "    \\end{matrix}\n",
        "  \\right.\n",
        "\\right]\n",
        "$$\n",
        "\n",
        "som er en forkortelse af\n",
        "\n",
        "$$\\left[\\begin{array}{rr|r}\n",
        "150 & -1 \\\\\n",
        "200 & -1\n",
        "\\end{array}\\right] \\begin{bmatrix} x\\\\ y \\end{bmatrix} =  \\begin{bmatrix} -1000\\\\ -500 \\end{bmatrix}$$\n",
        "\n",
        "\n",
        "På venstre side multiplicerer vi en matrix med koefficienterne, med vektoren, der indeholder variablerne.\n",
        "\n",
        "Højre side holder de konstante værdier.\n",
        "\n",
        "Denne adskillelse af koefficienter og variabler fra konstanterne bude være bekendt. Dette er præcis, hvad vi også gjorde i den generelle form!\n",
        "\n",
        "\n",
        "Man plejer at bruge $x_1,x_2,...x_n$ i stedet for $x,y$ når man skal repræsentere individuelle værdier af en løsningsvektor. Det giver os muligheden at arbejde med så mange værdier som vi har lyst til (ikke kun ~26).\n",
        "\n",
        "$$\\left[\\begin{array}{rr|r}\n",
        "150 & -1 \\\\\n",
        "200 & -1\n",
        "\\end{array}\\right] \\begin{bmatrix} x_1\\\\ x_2 \\end{bmatrix} =  \\begin{bmatrix} -1000\\\\ -500 \\end{bmatrix}$$\n",
        "\n",
        "\n",
        "Vi kan nu også introducere den aritmetiske repræsentation af matrixligningen: $A\\vec{x} = \\vec{b}$\n",
        "\n",
        "\n",
        "Hvor $A$ repræsenterer koefficientmatrix, $\\vec{x}$ repræsenterer løsningsvektoren, og $\\vec{b}$ repræsenterer konstanterne. OBS $\\vec{b}$ kan ikke være en vektor, der kun holder nuller, også kendt som nulfaktoren $\\vec{0}$.\n",
        "\n",
        "Før vi kan arbejde med denne form for systemer, skal vi lære om følgende emner i det næste afstnitt:\n",
        "\n",
        "- regler, der beskriver, hvordan matricer kan kombineres\n",
        "- hvordan man multiplicerer en matrix med en vektor\n",
        "- hvordan man beregner løsningsvektor $\\vec{x}$\n",
        " uden at bruge Gauss-eliminering.\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "GL7O_EIFCoEy"
      },
      "source": [
        "# Matricer\n",
        "\n",
        "Ligesom vektorer har matricer deres eget sæt af algebraiske operationer. I denne del vil vi lære om de mest centrale matrixoperationer og bygge op mod at bruge nogle af dem til at løse matrixligninger."
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "VKF2Xm18B_5p"
      },
      "source": [
        "Lad os først starte med matrixaddition og subtraktion.\n",
        "\n",
        "Som vi snakkede om tidligere, består en matrix af en eller flere søjlevektorer.\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "t_rvslUKOWn8"
      },
      "source": [
        "Matrix:\n",
        "$$\n",
        "\\left[\n",
        "  \\begin{matrix}\n",
        "    0.5 & 2 & 3 \\\\\n",
        "    1.4 & 4 & 4 \\\\\n",
        "    0.3 & 7 & 1 \\\\\n",
        "  \\end{matrix}\n",
        "\\right]\n",
        "$$\n",
        "\n",
        "$$\n",
        "\\swarrow\n",
        "\\downarrow\n",
        "\\searrow\n",
        "$$\n",
        "\n",
        "Søjlevektorer:\n",
        "\n",
        "$$\n",
        "\\left[ \\begin{array}{cc}\n",
        "0.5 \\\\\n",
        "1.4 \\\\\n",
        "0.3\n",
        "\\end{array} \\right]\n",
        "%\n",
        "\\left[ \\begin{array}{cc}\n",
        "2 \\\\\n",
        "4 \\\\\n",
        "7\n",
        "\\end{array} \\right]\n",
        "%\n",
        "\\left[ \\begin{array}{cc}\n",
        "3 \\\\\n",
        "4 \\\\\n",
        "1\n",
        "\\end{array} \\right]\n",
        "$$"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "RF9V27faCoG7"
      },
      "source": [
        "På grund af dette kan vi overføre operationerne fra vektorer også til matricer. Vi kan\n",
        "udføre vektoraddition og subtraktion mellem vektorer med det samme antal rækker.\n",
        "Vi kan kun udføre matrixaddition og subtraktion mellem matricer, der indeholder det samme antal rækker og kolonner. `M1.shape == M2.shape`\n",
        "\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "bpv7wCNf8t5a"
      },
      "source": [
        "Valid summering:\n",
        "$$\n",
        "  \\begin{bmatrix}\n",
        "    0.5 & 2 \\\\\n",
        "    1.4 & 4 \\\\\n",
        "  \\end{bmatrix}\n",
        "+\n",
        "  \\begin{bmatrix}\n",
        "    4 & 4 \\\\\n",
        "    7 & 1 \\\\\n",
        "  \\end{bmatrix}\n",
        " %\n",
        " \\hspace{1cm}\n",
        "  \\begin{bmatrix}\n",
        "    0.5 & 2 \\\\\n",
        "    7 & 1.7 \\\\\n",
        "    2 & 5\n",
        "  \\end{bmatrix}\n",
        "+\n",
        "  \\begin{bmatrix}\n",
        "    0.5 & 2 \\\\\n",
        "    7 & 1.7 \\\\\n",
        "    2 & 5\n",
        "  \\end{bmatrix}\n",
        "$$"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "jpzmaH6E-71k"
      },
      "source": [
        "No Go 🚫:\n",
        "$$\n",
        "  \\begin{bmatrix}\n",
        "    0.5 & 3 & 5 \\\\\n",
        "    1.4 & 3 & 9 \\\\\n",
        "  \\end{bmatrix}\n",
        "+\n",
        "  \\begin{bmatrix}\n",
        "    1 \\\\\n",
        "    4 \\\\\n",
        "    1\n",
        "  \\end{bmatrix}\n",
        "$$"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "QmtjKrNrbhNR"
      },
      "source": [
        "M1 = np.array([[0.5,2],\n",
        "              [1.4,4]])\n",
        "\n",
        "M2 = np.array([[4,4],\n",
        "               [7,1]])\n",
        "\n",
        "M3 = np.array([1,4,1])"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "pB9rIXLqIjcM",
        "outputId": "4278da78-8711-4248-a6bf-a4782171242b"
      },
      "source": [
        "M1 + M2"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[4.5, 6. ],\n",
              "       [8.4, 5. ]])"
            ]
          },
          "metadata": {},
          "execution_count": 75
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "la-JOcBCIqp3",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 177
        },
        "outputId": "3395f193-e273-44a2-9fa1-92056b31f7c9"
      },
      "source": [
        "M1 + M3"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "error",
          "ename": "ValueError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-76-eb2de951fea4>\u001b[0m in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mM1\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0mM3\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
            "\u001b[0;31mValueError\u001b[0m: operands could not be broadcast together with shapes (2,2) (3,) "
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "fNLiDaSGCyVi"
      },
      "source": [
        "Lige som med vektorer fungerer matrixaddition og subtraktion ved at fordele operationerne på tværs af de specifikke elementer og kombinere dem.\n"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "rXBCt90pKGqy",
        "outputId": "ffdb42b7-18f4-4dce-d1e8-2038e6308787"
      },
      "source": [
        "M1 = np.array([[6,2,4],[3.5,5,7],[5,3,2]])\n",
        "M2 = np.array([[0, 3.4, 2],[3,0.2,1],[0.1, 1.1, 7]])\n",
        "\n",
        "M1 + M2"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[6. , 5.4, 6. ],\n",
              "       [6.5, 5.2, 8. ],\n",
              "       [5.1, 4.1, 9. ]])"
            ]
          },
          "metadata": {},
          "execution_count": 77
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "y_MOMJtiKKKb"
      },
      "source": [
        "## Husk:\n",
        "\n",
        "\n",
        "\n",
        "*   Når vi taler om matricer, så er det først rækker og så kolonner, der tælles - en $2x3$ matrix har 2 rækker og 3 kolonner.\n",
        "*   En liste af tal fra en matrix er en vektor. En række - en rækkevektor, en kolonne - en søjlevektor\n",
        "* En vektor visualiseres tit ved at bruge pile, der starter i $(0,0)$ for at understrege, længden og retning som dets egenskaber.\n",
        "* Lige som rækker i en matrix, vi kan også summere og trække fra med vektorer. Man kan også skalere op vektorer ved at multiplicere med tal > 1 og < -1; og ned ved at multimplicere med tal mellem -1 og 1.\n",
        "* dot-product eller prikprodukt beregnes ved at summere produkter af de 2 værdier for alle positioner i de vektorer der skal multipliceres. $$\\vec{a} * \\vec{b} = \\sum_{i=1}^{n} a_i b_i = a_1b_1 + a_2b_2 + ... + a_nb_n$$\n",
        "\n",
        "* En lineær kombination er vektorer, som bliver skaleret og bagefter lagt sammen eller trukket fra.\n",
        "\n",
        "* Den aritmetiske repræsentation af matrixligningen er $A\\vec{x} = \\vec{b}$ hvor $A$ repræsenterer koefficientmatrix, $\\vec{x}$ repræsenterer løsningsvektoren, og $\\vec{b}$ repræsenterer konstanterne. OBS $\\vec{b}$ kan ikke være en vektor, der kun holder nuller, også kendt som nulfaktoren $\\vec{0}$.\n",
        "\n",
        "\n",
        "\n",
        "\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "AYpmM8K-txzw"
      },
      "source": [
        "$$\n",
        "A + B =\n",
        "  \\begin{smallmatrix} \\textrm{A}\\\\\\begin{bmatrix}\n",
        "    6 & 2 & 4 \\\\\n",
        "    3.5 & 5 & 7 \\\\\n",
        "    5 & 3 & 2\n",
        "  \\end{bmatrix}\\end{smallmatrix}\n",
        "+\n",
        " \\begin{smallmatrix} \\textrm{B}\\\\\\begin{bmatrix}\n",
        "    0 & 3.4 & 2 \\\\\n",
        "    3 & 0.2 & 1 \\\\\n",
        "    0.1 & 1.1 & 7 \\\\\n",
        "  \\end{bmatrix}\\end{smallmatrix}\n",
        "=\n",
        "\\begin{smallmatrix} \\textrm{A+B}\\\\\\begin{bmatrix}\n",
        "    6 & 5.4 & 6 \\\\\n",
        "    6.5 & 5.2 & 8 \\\\\n",
        "    5.1 & 4.1 & 9 \\\\\n",
        "  \\end{bmatrix}\\end{smallmatrix}\n",
        "$$"
      ]
    }
  ]
}